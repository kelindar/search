//go:build !noasm && !darwin && arm64
// AUTO-GENERATED BY GOCC -- DO NOT EDIT

TEXT ·f32_cosine_distance(SB), $0-32
	MOVD x+0(FP), R0
	MOVD y+8(FP), R1
	MOVD result+16(FP), R2
	MOVD size+24(FP), R3
	WORD $0xa9bf7bfd       // stp	x29, x30, [sp, #-16]!
	WORD $0x2f00e400       // movi	d0, #0000000000000000
	WORD $0x910003fd       // mov	x29, sp
	WORD $0xb4000103       // cbz	x3, .LBB0_3
	WORD $0xf100407f       // cmp	x3, #16
	WORD $0x54000182       // b.hs	.LBB0_4
	WORD $0x2f00e401       // movi	d1, #0000000000000000
	WORD $0x2f00e402       // movi	d2, #0000000000000000
	WORD $0x2f00e403       // movi	d3, #0000000000000000
	WORD $0xaa1f03e8       // mov	x8, xzr
	WORD $0x1400003a       // b	.LBB0_7

LBB0_3:
	WORD $0x2f00e402 // movi	d2, #0000000000000000
	WORD $0x2f00e401 // movi	d1, #0000000000000000
	WORD $0x1e21c042 // fsqrt	s2, s2
	WORD $0x1e202048 // fcmp	s2, #0.0
	WORD $0x540008a0 // b.eq	.LBB0_10
	WORD $0x14000047 // b	.LBB0_11

LBB0_4:
	WORD $0x927cec68 // and	x8, x3, #0xfffffffffffffff0
	WORD $0x91008009 // add	x9, x0, #32
	WORD $0x6f00e401 // movi	v1.2d, #0000000000000000
	WORD $0x9100802a // add	x10, x1, #32
	WORD $0x6f00e402 // movi	v2.2d, #0000000000000000
	WORD $0xaa0803eb // mov	x11, x8
	WORD $0x6f00e403 // movi	v3.2d, #0000000000000000
	WORD $0x6f00e404 // movi	v4.2d, #0000000000000000
	WORD $0x6f00e411 // movi	v17.2d, #0000000000000000
	WORD $0x6f00e412 // movi	v18.2d, #0000000000000000
	WORD $0x6f00e405 // movi	v5.2d, #0000000000000000
	WORD $0x6f00e406 // movi	v6.2d, #0000000000000000
	WORD $0x6f00e413 // movi	v19.2d, #0000000000000000
	WORD $0x6f00e414 // movi	v20.2d, #0000000000000000
	WORD $0x6f00e407 // movi	v7.2d, #0000000000000000
	WORD $0x6f00e410 // movi	v16.2d, #0000000000000000

LBB0_5:
	WORD $0xad7f5935 // ldp	q21, q22, [x9, #-32]
	WORD $0xf100416b // subs	x11, x11, #16
	WORD $0x4e35ceb1 // fmla	v17.4s, v21.4s, v21.4s
	WORD $0xacc26137 // ldp	q23, q24, [x9], #64
	WORD $0x4e36ced2 // fmla	v18.4s, v22.4s, v22.4s
	WORD $0x4e37cee5 // fmla	v5.4s, v23.4s, v23.4s
	WORD $0xad7f6959 // ldp	q25, q26, [x10, #-32]
	WORD $0x4e38cf06 // fmla	v6.4s, v24.4s, v24.4s
	WORD $0x4e35cf21 // fmla	v1.4s, v25.4s, v21.4s
	WORD $0x4e39cf33 // fmla	v19.4s, v25.4s, v25.4s
	WORD $0xacc2715b // ldp	q27, q28, [x10], #64
	WORD $0x4e36cf42 // fmla	v2.4s, v26.4s, v22.4s
	WORD $0x4e3acf54 // fmla	v20.4s, v26.4s, v26.4s
	WORD $0x4e37cf63 // fmla	v3.4s, v27.4s, v23.4s
	WORD $0x4e3bcf67 // fmla	v7.4s, v27.4s, v27.4s
	WORD $0x4e38cf84 // fmla	v4.4s, v28.4s, v24.4s
	WORD $0x4e3ccf90 // fmla	v16.4s, v28.4s, v28.4s
	WORD $0x54fffde1 // b.ne	.LBB0_5
	WORD $0x4e33d693 // fadd	v19.4s, v20.4s, v19.4s
	WORD $0xeb03011f // cmp	x8, x3
	WORD $0x4e31d651 // fadd	v17.4s, v18.4s, v17.4s
	WORD $0x4e21d441 // fadd	v1.4s, v2.4s, v1.4s
	WORD $0x4e33d4e2 // fadd	v2.4s, v7.4s, v19.4s
	WORD $0x4e31d4a5 // fadd	v5.4s, v5.4s, v17.4s
	WORD $0x4e21d461 // fadd	v1.4s, v3.4s, v1.4s
	WORD $0x4e22d602 // fadd	v2.4s, v16.4s, v2.4s
	WORD $0x4e25d4c3 // fadd	v3.4s, v6.4s, v5.4s
	WORD $0x4e21d481 // fadd	v1.4s, v4.4s, v1.4s
	WORD $0x6e22d442 // faddp	v2.4s, v2.4s, v2.4s
	WORD $0x6e23d464 // faddp	v4.4s, v3.4s, v3.4s
	WORD $0x6e21d421 // faddp	v1.4s, v1.4s, v1.4s
	WORD $0x7e30d843 // faddp	s3, v2.2s
	WORD $0x7e30d882 // faddp	s2, v4.2s
	WORD $0x7e30d821 // faddp	s1, v1.2s
	WORD $0x54000180 // b.eq	.LBB0_9

LBB0_7:
	WORD $0xd37ef50a // lsl	x10, x8, #2
	WORD $0xcb080069 // sub	x9, x3, x8
	WORD $0x8b0a0028 // add	x8, x1, x10
	WORD $0x8b0a000a // add	x10, x0, x10

LBB0_8:
	WORD $0xbc404544 // ldr	s4, [x10], #4
	WORD $0xbc404505 // ldr	s5, [x8], #4
	WORD $0xf1000529 // subs	x9, x9, #1
	WORD $0x1f040882 // fmadd	s2, s4, s4, s2
	WORD $0x1f0404a1 // fmadd	s1, s5, s4, s1
	WORD $0x1f050ca3 // fmadd	s3, s5, s5, s3
	WORD $0x54ffff41 // b.ne	.LBB0_8

LBB0_9:
	WORD $0x1e230842 // fmul	s2, s2, s3
	WORD $0x1e22c021 // fcvt	d1, s1
	WORD $0x1e21c042 // fsqrt	s2, s2
	WORD $0x1e202048 // fcmp	s2, #0.0
	WORD $0x54000081 // b.ne	.LBB0_11

LBB0_10:
	WORD $0xfd000040 // str	d0, [x2]
	WORD $0xa8c17bfd // ldp	x29, x30, [sp], #16
	WORD $0xd65f03c0 // ret

LBB0_11:
	WORD $0x1e22c040 // fcvt	d0, s2
	WORD $0x1e601820 // fdiv	d0, d1, d0
	WORD $0xfd000040 // str	d0, [x2]
	WORD $0xa8c17bfd // ldp	x29, x30, [sp], #16
	WORD $0xd65f03c0 // ret

TEXT ·f32_dot_product(SB), $0-32
	MOVD x+0(FP), R0
	MOVD y+8(FP), R1
	MOVD result+16(FP), R2
	MOVD size+24(FP), R3
	WORD $0xa9bf7bfd       // stp	x29, x30, [sp, #-16]!
	WORD $0x910003fd       // mov	x29, sp
	WORD $0xb40000c3       // cbz	x3, .LBB1_3
	WORD $0xf100207f       // cmp	x3, #8
	WORD $0x54000102       // b.hs	.LBB1_4
	WORD $0x2f00e400       // movi	d0, #0000000000000000
	WORD $0xaa1f03e8       // mov	x8, xzr
	WORD $0x14000018       // b	.LBB1_7

LBB1_3:
	WORD $0x2f00e400 // movi	d0, #0000000000000000
	WORD $0xfd000040 // str	d0, [x2]
	WORD $0xa8c17bfd // ldp	x29, x30, [sp], #16
	WORD $0xd65f03c0 // ret

LBB1_4:
	WORD $0x927df068 // and	x8, x3, #0xfffffffffffffff8
	WORD $0x91004009 // add	x9, x0, #16
	WORD $0x6f00e400 // movi	v0.2d, #0000000000000000
	WORD $0x9100402a // add	x10, x1, #16
	WORD $0x6f00e401 // movi	v1.2d, #0000000000000000
	WORD $0xaa0803eb // mov	x11, x8

LBB1_5:
	WORD $0xad7f8d22 // ldp	q2, q3, [x9, #-16]
	WORD $0x91008129 // add	x9, x9, #32
	WORD $0xf100216b // subs	x11, x11, #8
	WORD $0xad7f9544 // ldp	q4, q5, [x10, #-16]
	WORD $0x9100814a // add	x10, x10, #32
	WORD $0x4e22cc80 // fmla	v0.4s, v4.4s, v2.4s
	WORD $0x4e23cca1 // fmla	v1.4s, v5.4s, v3.4s
	WORD $0x54ffff21 // b.ne	.LBB1_5
	WORD $0x4e20d420 // fadd	v0.4s, v1.4s, v0.4s
	WORD $0xeb03011f // cmp	x8, x3
	WORD $0x6e20d400 // faddp	v0.4s, v0.4s, v0.4s
	WORD $0x7e30d800 // faddp	s0, v0.2s
	WORD $0x54000140 // b.eq	.LBB1_9

LBB1_7:
	WORD $0xd37ef50a // lsl	x10, x8, #2
	WORD $0xcb080069 // sub	x9, x3, x8
	WORD $0x8b0a0028 // add	x8, x1, x10
	WORD $0x8b0a000a // add	x10, x0, x10

LBB1_8:
	WORD $0xbc404541 // ldr	s1, [x10], #4
	WORD $0xbc404502 // ldr	s2, [x8], #4
	WORD $0xf1000529 // subs	x9, x9, #1
	WORD $0x1f010040 // fmadd	s0, s2, s1, s0
	WORD $0x54ffff81 // b.ne	.LBB1_8

LBB1_9:
	WORD $0x1e22c000 // fcvt	d0, s0
	WORD $0xfd000040 // str	d0, [x2]
	WORD $0xa8c17bfd // ldp	x29, x30, [sp], #16
	WORD $0xd65f03c0 // ret
